From: YOKOTA Hiroshi <yokota.hgml@gmail.com>
Date: Wed, 15 Sep 2021 00:02:36 +0900
Subject: Use getcwd(3) POSIX extension to avoid PATH_MAX macro

This fix helps GNU Hurd.
---
 CPP/Windows/FileDir.cpp  | 15 +++++----------
 CPP/Windows/FileName.cpp | 15 +++++----------
 2 files changed, 10 insertions(+), 20 deletions(-)

diff --git a/CPP/Windows/FileDir.cpp b/CPP/Windows/FileDir.cpp
index de8ec63..78469d2 100644
--- a/CPP/Windows/FileDir.cpp
+++ b/CPP/Windows/FileDir.cpp
@@ -4,6 +4,7 @@
 
 
 #ifndef _WIN32
+#include <cstdlib>
 #include <stdio.h>
 #include <errno.h>
 #include <limits.h>
@@ -882,17 +883,11 @@ bool GetCurrentDir(FString &path)
 {
   path.Empty();
 
-  #define MY__PATH_MAX  PATH_MAX
-  // #define MY__PATH_MAX  1024
+  char *res = getcwd(nullptr, 0);
 
-  char s[MY__PATH_MAX + 1];
-  char *res = getcwd(s, MY__PATH_MAX);
-  if (!res)
-  {
-    // if (errno != ERANGE)
-      return false;
-  }
-  path = fas2fs(s);
+  path = fas2fs(res);
+
+  free(res);
   return true;
 }
 
diff --git a/CPP/Windows/FileName.cpp b/CPP/Windows/FileName.cpp
index c3ff854..9260fc4 100644
--- a/CPP/Windows/FileName.cpp
+++ b/CPP/Windows/FileName.cpp
@@ -3,6 +3,7 @@
 #include "StdAfx.h"
 
 #ifndef _WIN32
+#include <cstdlib>
 #include <limits.h>
 #include <unistd.h>
 #include "../Common/StringConvert.h"
@@ -391,17 +392,11 @@ static bool GetCurDir(UString &path)
 
   #else
 
-  #define MY__PATH_MAX  PATH_MAX
-  // #define MY__PATH_MAX  1024
+  char *res = getcwd(nullptr, 0);
 
-  char s[MY__PATH_MAX + 1];
-  char *res = getcwd(s, MY__PATH_MAX);
-  if (!res)
-  {
-    // if (errno != ERANGE)
-      return false;
-  }
-  path = GetUnicodeString(s);
+  path = GetUnicodeString(res);
+
+  free(res);
   return true;
 
   #endif
